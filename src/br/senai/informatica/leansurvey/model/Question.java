package br.senai.informatica.leansurvey.model;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Question generated by hbm2java
 */
@Entity
@Table(name = "question", catalog = "leansurvey")
public class Question implements java.io.Serializable {

	private Long id;
	private Questionnaire questionnaire;
	private Questiontype questiontype;
	private String title;
	private String description;
	private boolean required;
	private int ordem;
	/*private Set questionrulegroups = new HashSet(0);
	private Set answerquestions = new HashSet(0);*/

/*	public Question(Integer id, Questiontype questiontype, String title, String description, boolean required,
			int order) {
		super();
		this.id = id;
		this.questiontype = questiontype;
		this.title = title;
		this.description = description;
		this.required = required;
		this.order = order;
	}*/

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "Id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "QuestionnaireId", nullable = false)
	public Questionnaire getQuestionnaire() {
		return this.questionnaire;
	}

	public void setQuestionnaire(Questionnaire questionnaire) {
		this.questionnaire = questionnaire;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "QuestionTypeId", nullable = false)
	public Questiontype getQuestiontype() {
		return this.questiontype;
	}

	public void setQuestiontype(Questiontype questiontype) {
		this.questiontype = questiontype;
	}

	@Column(name = "Title", nullable = false, length = 50)
	public String getTitle() {
		return this.title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	@Column(name = "Description", nullable = false, length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "Required", nullable = false)
	public boolean isRequired() {
		return this.required;
	}

	public void setRequired(boolean required) {
		this.required = required;
	}

	@Column(name = "Ordem", nullable = false)
	public int getOrdem() {
		return this.ordem;
	}

	public void setOrdem(int ordem) {
		this.ordem = ordem;
	}

/*	@OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
	public Set getQuestionrulegroups() {
		return this.questionrulegroups;
	}

	public void setQuestionrulegroups(Set questionrulegroups) {
		this.questionrulegroups = questionrulegroups;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
	public Set getAnswerquestions() {
		return this.answerquestions;
	}

	public void setAnswerquestions(Set answerquestions) {
		this.answerquestions = answerquestions;
	}
*/
}
