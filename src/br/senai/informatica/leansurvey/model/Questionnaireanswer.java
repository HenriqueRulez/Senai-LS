package br.senai.informatica.leansurvey.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Questionnaireanswer generated by hbm2java
 */
@Entity
@Table(name = "questionnaireanswer", catalog = "leansurvey")
public class Questionnaireanswer implements java.io.Serializable {

	private Long id;
	private Interviewer interviewer;
	private Questionnaire questionnaire;
	private Date date;
	//private Set answerquestions = new HashSet(0);

	public Questionnaireanswer() {
	}

	public Questionnaireanswer(Interviewer interviewer, Questionnaire questionnaire, Date date) {
		this.interviewer = interviewer;
		this.questionnaire = questionnaire;
		this.date = date;
	}

	/*public Questionnaireanswer(Interviewer interviewer, Questionnaire questionnaire, Date date, Set answerquestions) {
		this.interviewer = interviewer;
		this.questionnaire = questionnaire;
		this.date = date;
		this.answerquestions = answerquestions;
	}*/

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "Id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "InterviewerId", nullable = false)
	public Interviewer getInterviewer() {
		return this.interviewer;
	}

	public void setInterviewer(Interviewer interviewer) {
		this.interviewer = interviewer;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "QuestionnaireId", nullable = false)
	public Questionnaire getQuestionnaire() {
		return this.questionnaire;
	}

	public void setQuestionnaire(Questionnaire questionnaire) {
		this.questionnaire = questionnaire;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "Date", nullable = false, length = 10)
	public Date getDate() {
		return this.date;
	}

	public void setDate(Date date) {
		this.date = date;
	}

	/*@OneToMany(fetch = FetchType.LAZY, mappedBy = "questionnaireanswer")
	public Set getAnswerquestions() {
		return this.answerquestions;
	}

	public void setAnswerquestions(Set answerquestions) {
		this.answerquestions = answerquestions;
	}*/

}
